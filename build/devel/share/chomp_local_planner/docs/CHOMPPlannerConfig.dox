\subsubsection parameters ROS parameters

Reads and maintains the following parameters on the ROS server

- \b "~max_vel_trans" : \b [double] The absolute value of the maximum translational velocity for the robot in m/s min: 0.0, default: 0.55, max: std::numeric_limits<double>::infinity()
- \b "~min_vel_trans" : \b [double] The absolute value of the minimum translational velocity for the robot in m/s min: 0.0, default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~max_vel_x" : \b [double] The maximum x velocity for the robot in m/s min: -std::numeric_limits<double>::infinity(), default: 0.55, max: std::numeric_limits<double>::infinity()
- \b "~min_vel_x" : \b [double] The minimum x velocity for the robot in m/s min: -std::numeric_limits<double>::infinity(), default: 0.0, max: std::numeric_limits<double>::infinity()
- \b "~max_vel_y" : \b [double] The maximum y velocity for the robot in m/s min: -std::numeric_limits<double>::infinity(), default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~min_vel_y" : \b [double] The minimum y velocity for the robot in m/s min: -std::numeric_limits<double>::infinity(), default: -0.1, max: std::numeric_limits<double>::infinity()
- \b "~max_vel_theta" : \b [double] The absolute value of the maximum rotational velocity for the robot in rad/s min: 0.0, default: 1.0, max: std::numeric_limits<double>::infinity()
- \b "~min_vel_theta" : \b [double] The absolute value of the minimum rotational velocity for the robot in rad/s min: 0.0, default: 0.4, max: std::numeric_limits<double>::infinity()
- \b "~acc_lim_x" : \b [double] The acceleration limit of the robot in the x direction min: 0.0, default: 2.5, max: 20.0
- \b "~acc_lim_y" : \b [double] The acceleration limit of the robot in the y direction min: 0.0, default: 2.5, max: 20.0
- \b "~acc_lim_theta" : \b [double] The acceleration limit of the robot in the theta direction min: 0.0, default: 3.2, max: 20.0
- \b "~acc_lim_trans" : \b [double] The absolute value of the maximum translational acceleration for the robot in m/s^2 min: 0.0, default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~prune_plan" : \b [bool] Start following closest point of global plan, not first point (if different). min: False, default: False, max: True
- \b "~xy_goal_tolerance" : \b [double] Within what maximum distance we consider the robot to be in goal min: -std::numeric_limits<double>::infinity(), default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~yaw_goal_tolerance" : \b [double] Within what maximum angle difference we consider the robot to face goal direction min: -std::numeric_limits<double>::infinity(), default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~trans_stopped_vel" : \b [double] Below what maximum velocity we consider the robot to be stopped in translation min: -std::numeric_limits<double>::infinity(), default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~theta_stopped_vel" : \b [double] Below what maximum rotation velocity we consider the robot to be stopped in rotation min: -std::numeric_limits<double>::infinity(), default: 0.1, max: std::numeric_limits<double>::infinity()
- \b "~restore_defaults" : \b [bool] Restore to the original configuration. min: False, default: False, max: True

